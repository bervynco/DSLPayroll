/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.DB;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import models.Notes;
import models.PayrollDetails;
import models.Reports;
import models.SalaryItems;
import models.Uploads;
import models.User;
import models.UserLogs;

/**
 *
 * @author L R E
 */
public class ViewArchives extends javax.swing.JFrame {

    /**
     * Creates new form VuewArchives
     */
    private static User sessionUser = null;
    private static ArrayList<String> employeePages = new ArrayList<String>();
    private static int currentEmployeeFilter = 0;
    public void FillEmployeesComboBox() throws SQLException, ClassNotFoundException{
        List<User> employees = new ArrayList<User>();
        employees = DB.getUsers();
        comboBoxEmployees.addItem("No Filter");
        for(int i = 0; i < employees.size(); i++){
            String fullName = employees.get(i).getFirstName()+ " " + employees.get(i).getLastName();
            comboBoxEmployees.addItem(fullName);
        }
    }
    public DefaultTableModel FillTable(int month, int year) throws SQLException, ClassNotFoundException, ParseException{
        DefaultTableModel model = new DefaultTableModel();
        model.setRowCount(0);
        
        List<PayrollDetails> payrollDetails = new ArrayList<PayrollDetails>();
        if(year == 0){
            Calendar now = Calendar.getInstance();   // Gets the current date and time
            year = now.get(Calendar.YEAR);       // The current year
        }
        payrollDetails = DB.getAllPayroll(this.currentEmployeeFilter, month, year, 1);

        model.addColumn("Employee ID");
        model.addColumn("Name");
        model.addColumn("Rate");
        model.addColumn("SSS Deduction");
        model.addColumn("Pagibig Deduction");
        model.addColumn("PhilHealth Deduction");
        model.addColumn("Bonus");
        model.addColumn("Cash Advance");
        model.addColumn("Loan");
        model.addColumn("Days");
        model.addColumn("Overtime");
        model.addColumn("Tax Deduction");
        model.addColumn("Total Salary");
           
        System.out.println(payrollDetails.size());
        for(int i = 0; i < payrollDetails.size(); i++){
            Object [] rowData = {payrollDetails.get(i).getEmployeeID(), 
                payrollDetails.get(i).getEmployeeName(), 
                payrollDetails.get(i).getRate(), 
                payrollDetails.get(i).getSssDeduction(), 
                payrollDetails.get(i).getPagibigDeduction(),
                payrollDetails.get(i).getPhilHealthDeduction(),
                payrollDetails.get(i).getBonus(),
                payrollDetails.get(i).getCashAdvance(), 
                payrollDetails.get(i).getLoan(), 
                payrollDetails.get(i).getDays(), 
                payrollDetails.get(i).getOverTime(), 
                payrollDetails.get(i).getTaxDeduction(), 
                payrollDetails.get(i).getTotalSalary()};
            model.addRow(rowData);
        }
        return model;
    }
    
    public ViewArchives(User user, ArrayList<String> employeePages) throws SQLException, ClassNotFoundException, ParseException{
        initComponents();
        this.FillEmployeesComboBox();
        Calendar cal = Calendar.getInstance();
        int month = cal.get(Calendar.MONTH);
        int year = cal.get(Calendar.YEAR);
        comboBoxMonth.setSelectedIndex(month);
        txtYear.setText(Integer.toString(year));
        DefaultTableModel model = this.FillTable(month, year);
        tableList.setModel(model);
        this.sessionUser = user;
        this.employeePages = employeePages;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JTable();
        comboBoxMonth = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        comboBoxEmployees = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(500, 500));

        tableList.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        tableList.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableList.setRowHeight(25);
        tableList.setRowMargin(5);
        tableList.setSelectionBackground(new java.awt.Color(173, 216, 230));
        tableList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableList);

        comboBoxMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Month:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Year:");

        txtYear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jButton2.setText("Back To Main Menu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Filter:");

        comboBoxEmployees.setEditable(true);
        comboBoxEmployees.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        comboBoxEmployees.setModel(new javax.swing.DefaultComboBoxModel<>());
        comboBoxEmployees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxEmployeesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(1, 1, 1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(comboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(comboBoxEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(comboBoxMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(txtYear)
                        .addComponent(jLabel1)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(comboBoxEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListMouseClicked
        // TODO add your handling code here:

        
    }//GEN-LAST:event_tableListMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            int month = comboBoxMonth.getSelectedIndex() + 1;
            int year = Integer.valueOf(txtYear.getText());
            
            DefaultTableModel model = this.FillTable(month, year);
            tableList.setModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(ViewArchives.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewArchives.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(ViewArchives.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboBoxEmployeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxEmployeesActionPerformed
//        int month = comboBoxMonth.getSelectedIndex() + 1;
//        int year = Integer.valueOf(txtYear.getText());
        try {
            // TODO add your handling code here:
            String employeeName = (String) comboBoxEmployees.getSelectedItem();
            if(employeeName.equals("No Filter")){
                this.currentEmployeeFilter = 0;
            }
            else{
                this.currentEmployeeFilter = DB.getEmployeeIDFromName(employeeName);
            }
//            DefaultTableModel model = this.FillTable(month, year);
//            tableList.setModel(model);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboBoxEmployeesActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboBoxEmployees;
    private javax.swing.JComboBox<String> comboBoxMonth;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableList;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
